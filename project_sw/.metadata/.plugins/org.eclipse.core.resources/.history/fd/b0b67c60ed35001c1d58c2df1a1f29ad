/******************************************************************
 * This is the main file for the Software Sessions
 *
 */

#include <stdint.h>
#include <inttypes.h>

#include "common.h"
//#include "montgomery.h"

// Uncomment for Session SW1
//extern void warmup();

// Uncomment for Session SW2 onwards
#include "montgomery.h"

void printResult(uint32_t *in) {
	int32_t i;

	for (i = 0; i < 32; i++) {
		xil_printf("0x%x,", in[i]);
	}
	xil_printf("\n\r");
}

int main() {
	init_platform();
	init_performance_counters(1);

	// SW3: montgomery multiplication
	//----------------------
	uint32_t a[32]         = { 0x4aeca730, 0x294f568f, 0xfb8f4d41, 0xf6385dea, 0x8d784796, 0x9c1f679c, 0x110e43ec, 0x17a1f923, 0x99f053c2, 0xfd177213, 0x364d9919, 0xa8e11a55, 0x6bbefef2, 0x25956a06, 0xdd0fe628, 0xa05f01a0, 0x5d3e8eb5, 0xdafbf24e, 0x8e98bbc4, 0x68843c7d, 0x964187d1, 0x56841de7, 0xeadbcaaa, 0x4ba96ed6, 0xec5a086b, 0x8c55863f, 0xb84e3cd4, 0x6a0e4297, 0xecef2f2e, 0xa22f7e20, 0x0a5ab529, 0x8abc4f51 };
	uint32_t b[32]         = { 0x7cc7590a, 0x1ab2ca8f, 0x94965f93, 0xa132f59d, 0x40a3552c, 0x91b69f74, 0x5e8eb271, 0x86672943, 0x1629aa50, 0xb88056b9, 0x7d16cd3f, 0x8edf4b2f, 0x9d254108, 0xc4f584a7, 0x601b57b6, 0x5e36af43, 0xf7763f39, 0x9d22a987, 0xe42916be, 0x4216dbec, 0xb5e09ad4, 0xe4db8d47, 0x5bf0133f, 0xc3df98d8, 0xfe417529, 0xfa870cd8, 0x57644be2, 0xb6645850, 0x9c6e1074, 0x7cd8a6e2, 0xf89890db, 0x8be123e4 };
	uint32_t n[32]         = { 0x9cf7f9f7, 0x9e949a40, 0xc99a5767, 0x6e321ded, 0x9f803b10, 0x4767c629, 0xbcfc2e32, 0x3fda4238, 0xf6d75313, 0xd8183b25, 0x1d04186c, 0xdf3ee0e6, 0x3442d076, 0x71c4a918, 0xa547edf7, 0x38282e68, 0x3052f5c2, 0x07d17652, 0xa7bda27b, 0x53977c3d, 0x550652ab, 0xe06c68ac, 0xc3646d6a, 0xca289c06, 0x630b187d, 0xa8b747bd, 0xa081d6dc, 0x7dd02d21, 0x027061b6, 0x509e6f6f, 0x8f9e6a9f, 0x8e7d05e5 };
	uint32_t n_prime[32]   = { 0x936b6839, 0x5ebadb26, 0xc4b6f972, 0x11535542, 0x4b6d3446, 0x1c481ef1, 0x632fb2b3, 0xd53a4116, 0x92567637, 0x687876d0, 0x1a67ec4a, 0x1f72b0d2, 0x2d750973, 0xc6fe44cc, 0x3b90f9f8, 0x31035cdd, 0xb55d6478, 0xe033be4d, 0xcc38ae9c, 0xb81dd432, 0x71338846, 0x5ec714f5, 0xdd16da40, 0x4103d045, 0xf7220755, 0x028a37ba, 0xafe96b92, 0x39ddd7e4, 0x3be17ae6, 0xca2700d3, 0x8ef22879, 0x6cd8604f };
	uint32_t res[32]       = { 0x68e7537e, 0xbe4128cb, 0x777c1072, 0xbeb78cff, 0xa473aad8, 0x9540e3f9, 0xe32d7329, 0x465b717c, 0xb8db410b, 0xd7918d57, 0x7c08cdd2, 0x387fc97a, 0x47c81658, 0x1f223164, 0xc25d2066, 0x3b794f90, 0x8e08663d, 0x2950cf2c, 0x1d9d4051, 0x5fe41a9e, 0x75a4a19d, 0x44f49bc0, 0xeaf92287, 0xef27abd6, 0xddf5f5b9, 0x731fcd68, 0x0455d42c, 0x672f5a16, 0xa72d0a11, 0xf675eeda, 0x77153f9e, 0x7f415343 };

	uint32_t res[33];

	START_TIMING
	montMulOpt(a, b, n, n_prime, res, 32);
	STOP_TIMING

	printResult(res);

	for(int i = 0; i < 32; i++)
	{
		xil_printf("0x%x,", res[i] - gt[i]);
	}

	cleanup_platform();

	return 0;
}
